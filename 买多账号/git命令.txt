cgit clone 
git branch [分支名] 创建分支
git branch 查看本地所有分支
git checkout [分支名称] 切换分支
---写代码---
git status （查看文件改变记录）
git diff (查看代码级改变)
git add (1：确认改变)
git commit -m 提交注释 (2：提交到当前分支的本地工作区)
git push [远程分支：origin] [本地分支的名称]
去git 管理网站创建Merge Request
等待合并
----管理员合并所有人的Merge Request----
checkout master (切换至Master)
git pull (从远程master 更新至 本地master)
checkout [branch] (切换至本地分支)
git rebase master [从本地 master 更新当前分支]

执行vi ~/.git-credentials，可以看到被保存的账号密码，删掉或者修改都可以了！
----是否有冲突----
----有----
----如何解决冲突----
1、在VS中操作代码文件并解决冲突
2、git add . 加入待提交
3、git rebase --continue 
----如果仍然有冲突，重复1/2/3步骤
4、git rebase --skip 
5、git push -f origin [branch] 强推
-----去网站重新创建Merge Request-------


一、新建代码库
# 在当前目录新建一个Git代码库
$ git init

# 新建一个目录，将其初始化为Git代码库
$ git init [project-name]

# 下载一个项目和它的整个代码历史
$ git clone [url]
二、配置
Git的设置文件为.gitconfig，它可以在用户主目录下（全局配置），也可以在项目目录下（项目配置）。

# 显示当前的Git配置
$ git config --list

# 编辑Git配置文件
$ git config -e [--global]

# 设置提交代码时的用户信息
$ git config [--global] user.name "[name]"
$ git config [--global] user.email "[email address]"
三、增加/删除文件

# 添加指定文件到暂存区
$ git add [file1] [file2] ...

# 添加指定目录到暂存区，包括子目录
$ git add [dir]

# 添加当前目录的所有文件到暂存区
$ git add .

# 添加每个变化前，都会要求确认
# 对于同一个文件的多处变化，可以实现分次提交
$ git add -p

# 删除工作区文件，并且将这次删除放入暂存区
$ git rm [file1] [file2] ...

# 停止追踪指定文件，但该文件会保留在工作区
$ git rm --cached [file]

# 改名文件，并且将这个改名放入暂存区
$ git mv [file-original] [file-renamed]
四、代码提交

# 提交暂存区到仓库区
$ git commit -m [message]

# 提交暂存区的指定文件到仓库区
$ git commit [file1] [file2] ... -m [message]

# 提交工作区自上次commit之后的变化，直接到仓库区
$ git commit -a

# 提交时显示所有diff信息
$ git commit -v

# 使用一次新的commit，替代上一次提交
# 如果代码没有任何新变化，则用来改写上一次commit的提交信息
$ git commit --amend -m [message]

# 重做上一次commit，并包括指定文件的新变化
$ git commit --amend [file1] [file2] ...

git强制覆盖：git reset --hard FETCH_HEAD
    git fetch --all
    git reset --hard 
    git pull

[root@iz8vb3b9w2ql5qhabd9molz www]# rm -rf 4NU/
[root@iz8vb3b9w2ql5qhabd9molz www]# ls
cgi-bin  html
[root@iz8vb3b9w2ql5qhabd9molz www]# mkdir 4NU
[root@iz8vb3b9w2ql5qhabd9molz www]# cd 4NU/
[root@iz8vb3b9w2ql5qhabd9molz 4NU]# git clone -b dev https://github.com/colin5213/4NU.git ./
//新用户
git clone http://lsm080602017:lishiming644604@github.com/lsm080602017/ccc.git

复制
cp -R  /home/wwwroot/4nu.com/shop/image/ /home/wwwroot/www.cheapplussize.com/image/
cp -r /home/wwwroot/www.cheapplussize.com/image/reviews /home/wwwroot/4nu.com/shop/image/
cp -R /home/wwwroot/www.cheapplussize.com/image/catalog/0718 /home/wwwroot/4nu.com/shop/image/catalog
端口号
netstat -tnlp | grep :80
杀端口号 kill -9 xx

修改权限
chmod -R 777 /var/home/userid/cc
查看定时任务
crontab  -l
输入命令“crontab －e”，在打开的页面中点击“i”键，进入插入模式，就可以编

redis
flushall 清空所有

cpu使用 sar -P 0 -u 1 5

//文件所有者和组
chgrp  用户名    文件名  -R
chown 用户名   文件名  -R
sudo su切换root
